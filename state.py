from aiogram.dispatcher.filters.state import State, StatesGroup

class TelegramState(StatesGroup):
    superadmin_start = State()
    superadmin_add_admin = State()
    superadmin_remove_admin = State()
    superadmin_remove_admin_confirm = State()
    superadmin_configuration = State()
    superadmin_edit_configuration = State()
    superadmin_feed = State()
    superadmin_restart_tasks = State()

    admin_start = State()
    admin_add_validator = State()
    admin_add_payer = State()
    admin_add_operator = State()
    admin_remove_validator = State()
    admin_remove_payer = State()
    admin_remove_operator = State()
    admin_remove_validator_confirm = State()
    admin_remove_payer_confirm = State()
    admin_remove_operator_confirm = State()

    validator_start = State()
    validator_balance = State()
    validator_withdrawal = State()
    validator_withdrawal_card = State()
    validator_withdrawal_confirm = State()

    payer_start = State()
    payer_withdraw_list = State()
    payer_process = State()
    payer_done = State()

    welcome = State()
    terms = State()
    requirements = State()
    requirements_no = State()
    address = State()
    registration_completed = State()
    # lets_start = State()

    ban = State()

    start = State()
    referral = State()
    software = State()
    account = State()
    change_address = State()

    install_launcher = State()
    install_proxifier = State()
    choose_challenge = State()
    challenge = State()
    no_challenge = State()

    preprocessing = State()
    game_launch = State()
    proxifier_red_proxy = State()
    game_given = State()
    game_in_progress = State()
    game_close_confirm = State()
    game_upload = State()
    game_close = State()
    game_done = State()

    social = State()

    balance = State()
    withdrawal = State()
    withdrawal_card = State()
    withdrawal_confirm = State()


    operator_start = State()
    operator_challenges = State()
    operator_challenge_change_priority = State()
    operator_challenge_change_priority_set = State()
    operator_challenge_toggle_active = State()
    operator_edit_challenge = State()
    operator_edit_challenge_choose = State()
    operator_edit_challenge_time = State()
    operator_edit_challenge_points = State()
    operator_edit_challenge_youtube = State()
    operator_edit_challenge_quest = State()
    operator_edit_challenge_text = State()
    operator_add_challenge_title = State()
    operator_add_challenge_timeout = State()
    operator_add_challenge_video = State()
    operator_add_challenge_quest_info = State()
    operator_add_challenge_description = State()
    operator_add_challenge_location = State()
    operator_add_challenge_points = State()
    operator_add_challenge_priority = State()
    operator_add_challenge_cover = State()
    operator_add_challenge_confirm = State()

    operator_find_afk = State()
    operator_punish_afk = State()

    leaderboard_choose = State()
    leaderboard = State()

